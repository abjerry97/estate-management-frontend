import axios from "axios";
import React, { useState } from "react";
import { Link, useNavigate } from "react-router-dom";

function Signup(props) {
  const {currentEstate,setUserInfo}= props
  const [showPassword, setshowPassword] = useState(false);
  const [password, setPassword] = useState("");
  const [phonenumber, setPhonenumber] = useState("");
  const [email, setEmail] = useState("");
  const [houseAddress, sethouseAddress] = useState("");
  const [fullName, setfullName] = useState("");
  const [ownerType, setownerType] = useState("");
  const [apartmentType, setapartmentType] = useState("");
  const navigate = useNavigate();
  const handleSignup = () => {
    axios
      .post(
        `/register?estateId=${currentEstate._id || ""}`,
        {
          phone: phonenumber,
          password,
          email,
          name: fullName,
          houseAddress,
          houseOwnerType:ownerType,
          apartmentType,
        }
      )
      .then((response) => {
        alert(response.data.message);
        if (response.data.success){
          if (response.data.user){
            const {user} = response.data 
            setUserInfo(user)
            localStorage.setItem('user', JSON.stringify(user));
          }
           navigate("/")};
      })
      .catch((error) => {
        alert(error);
      });
  };
  return (
    <div className="container ">
      <div className="row d-flex justify-content-center">
        <div className="col-11 col-md-9 col-lg-5 shadow rounded-3 p-4 mt-5">
          <p className="purple-text"><Link to="/"> Welcome to {!!currentEstate&& currentEstate.name}</Link></p>
          <div className="mt-5">
            <p className="purple-text"><strong>Sign Up</strong></p>
            <div className="d-flex align-items-center purple-border p-2">
              <svg
                width="24"
                height="26"
                viewBox="0 0 24 26"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M12.6195 1.00536C12.5382 0.923869 12.4417 0.859219 12.3354 0.815108C12.2291 0.770997 12.1151 0.748291 12 0.748291C11.8849 0.748291 11.7709 0.770997 11.6646 0.815108C11.5583 0.859219 11.4618 0.923869 11.3805 1.00536L0.880501 11.5054C0.799298 11.5868 0.734936 11.6834 0.691096 11.7897C0.647256 11.896 0.624796 12.0099 0.625001 12.1249V24.3749C0.625001 24.6069 0.717189 24.8295 0.881283 24.9936C1.04538 25.1577 1.26794 25.2499 1.5 25.2499H9.375C9.60707 25.2499 9.82963 25.1577 9.99372 24.9936C10.1578 24.8295 10.25 24.6069 10.25 24.3749V17.3749H13.75V24.3749C13.75 24.6069 13.8422 24.8295 14.0063 24.9936C14.1704 25.1577 14.3929 25.2499 14.625 25.2499H22.5C22.7321 25.2499 22.9546 25.1577 23.1187 24.9936C23.2828 24.8295 23.375 24.6069 23.375 24.3749V12.1249C23.3752 12.0099 23.3527 11.896 23.3089 11.7897C23.2651 11.6834 23.2007 11.5868 23.1195 11.5054L20.75 9.1376V3.37486C20.75 3.14279 20.6578 2.92023 20.4937 2.75614C20.3296 2.59204 20.1071 2.49986 19.875 2.49986H18.125C17.8929 2.49986 17.6704 2.59204 17.5063 2.75614C17.3422 2.92023 17.25 3.14279 17.25 3.37486V5.6376L12.6195 1.00536ZM2.375 23.4999V12.4871L12 2.86211L21.625 12.4871V23.4999H15.5V16.4999C15.5 16.2678 15.4078 16.0452 15.2437 15.8811C15.0796 15.717 14.8571 15.6249 14.625 15.6249H9.375C9.14294 15.6249 8.92038 15.717 8.75628 15.8811C8.59219 16.0452 8.5 16.2678 8.5 16.4999V23.4999H2.375Z"
                  fill="#A986A7"
                />
              </svg>

              <input
                type="text"
                name=""
                id=""
                value={houseAddress}
                //   value={searchInput}
                placeholder="House No. &amp; Street name"
                className="border-0 w-100 mx-2 somehow-black-text"
                onChange={(e) => {
                  sethouseAddress(e.target.value);
                }}
              />
            </div>

            <div className="d-flex align-items-center purple-border p-2 mt-3">
              <svg
                width="15"
                height="23"
                viewBox="0 0 15 23"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M13.2062 0.912231H2.34687C1.93543 0.912231 1.54084 1.07568 1.24991 1.36661C0.958977 1.65754 0.795532 2.05213 0.795532 2.46357V21.0796C0.795532 21.4911 0.958977 21.8857 1.24991 22.1766C1.54084 22.4675 1.93543 22.631 2.34687 22.631H13.2062C13.6177 22.631 14.0123 22.4675 14.3032 22.1766C14.5941 21.8857 14.7576 21.4911 14.7576 21.0796V2.46357C14.7576 2.05213 14.5941 1.65754 14.3032 1.36661C14.0123 1.07568 13.6177 0.912231 13.2062 0.912231ZM8.55223 21.0796H7.00089V19.5283H8.55223V21.0796ZM2.34687 17.977V2.46357H13.2062V17.977H2.34687Z"
                  fill="#A986A7"
                />
              </svg>
              <input
                type="tel"
                name=""
                id=""
                value={phonenumber}
                placeholder="phonenumber"
                className="border-0 w-100 mx-2 somehow-black-text"
                onChange={(e) => {
                  setPhonenumber(e.target.value);
                }}
              />
            </div>

            <div className="d-flex align-items-center purple-border p-2 mt-3">
              <svg
                width="21"
                height="23"
                viewBox="0 0 21 23"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M15.8125 5.75C15.8125 8.92598 13.2385 11.5 10.0625 11.5C6.88652 11.5 4.3125 8.92598 4.3125 5.75C4.3125 2.57447 6.88652 0 10.0625 0C13.2385 0 15.8125 2.57447 15.8125 5.75ZM9.39316 16.1359L7.90625 13.6562H12.2188L10.7318 16.1359L12.2277 21.7018L14.0021 14.4604C17.4701 14.9994 20.125 18.0002 20.125 21.6209C20.125 22.3801 19.5051 23 18.7459 23H1.38C0.617676 23 0 22.3801 0 21.6209C0 18.0002 2.65443 14.9994 6.12285 14.4604L7.89727 21.7018L9.39316 16.1359Z"
                  fill="#A986A7"
                />
              </svg>

              <input
                type="text"
                name=""
                id=""
                value={fullName}
                //   value={searchInput}
                placeholder="name"
                className="border-0 w-100 mx-2 somehow-black-text"
                onChange={(e) => {
                  setfullName(e.target.value);
                }}
              />
            </div>

            <div className="d-flex align-items-center purple-border p-2 mt-3">
              <svg
                width="17"
                height="17"
                viewBox="0 0 17 17"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M8.20674 3.72979C9.50459 3.72979 10.7275 4.30514 11.6237 5.20454V5.2072C11.6237 4.77529 11.9143 4.44857 12.316 4.44857H12.418C13.0517 4.44857 13.1787 5.04623 13.1787 5.23482L13.1814 11.9472C13.1373 12.387 13.6356 12.6144 13.9124 12.3318C14.9881 11.2252 16.2775 6.63732 13.2425 3.98107C10.412 1.50173 6.61299 1.91132 4.59318 3.3032C2.4464 4.78645 1.07418 8.06267 2.40709 11.1418C3.86271 14.4988 8.02399 15.5002 10.5007 14.5014C11.7544 13.9951 12.3324 15.6877 11.0293 16.2418C9.06524 17.0796 3.59178 16.994 1.0354 12.5671C-0.691693 9.57673 -0.600318 4.31629 3.98224 1.59098C7.48478 -0.495239 12.1061 0.0827617 14.892 2.99136C17.8032 6.03489 17.6348 11.7294 14.7926 13.9431C13.5054 14.9498 11.594 13.9707 11.6078 12.5039L11.5935 12.0258C10.6972 12.9135 9.50459 13.4341 8.20674 13.4341C5.63921 13.4341 3.37874 11.1731 3.37874 8.60826C3.37874 6.01576 5.63921 3.73086 8.20674 3.73086V3.72979ZM11.4362 8.42286C11.339 6.54382 9.94446 5.41226 8.25934 5.41226H8.19559C6.25334 5.41226 5.17437 6.94226 5.17437 8.67679C5.17437 10.6217 6.47753 11.8499 8.18762 11.8499C10.0964 11.8499 11.3496 10.4533 11.441 8.80111L11.4362 8.42286Z"
                  fill="#A986A7"
                />
              </svg>
              <input
                type="email"
                name=""
                id=""
                value={email}
                //   value={searchInput}
                placeholder="email"
                className="border-0 w-100 mx-2 somehow-black-text"
                onChange={(e) => {
                  setEmail(e.target.value);
                }}
              />
            </div>

            <div className="d-flex align-items-center purple-border p-2 mt-3">
              <svg
                width="21"
                height="23"
                viewBox="0 0 21 23"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M15.8125 5.75C15.8125 8.92598 13.2385 11.5 10.0625 11.5C6.88652 11.5 4.3125 8.92598 4.3125 5.75C4.3125 2.57447 6.88652 0 10.0625 0C13.2385 0 15.8125 2.57447 15.8125 5.75ZM9.39316 16.1359L7.90625 13.6562H12.2188L10.7318 16.1359L12.2277 21.7018L14.0021 14.4604C17.4701 14.9994 20.125 18.0002 20.125 21.6209C20.125 22.3801 19.5051 23 18.7459 23H1.38C0.617676 23 0 22.3801 0 21.6209C0 18.0002 2.65443 14.9994 6.12285 14.4604L7.89727 21.7018L9.39316 16.1359Z"
                  fill="#A986A7"
                />
              </svg>
              <input
                type="text"
                name=""
                id=""
                value={ownerType}
                placeholder="Are you a landlord or Tenant?"
                className="border-0 w-100 mx-2 somehow-black-text"
                onChange={(e) => {
                  setownerType(e.target.value);
                }}
              />
            </div>
            <div className="d-flex align-items-center purple-border p-2 mt-3">
              <svg
                width="24"
                height="26"
                viewBox="0 0 24 26"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M12.6195 1.00536C12.5382 0.923869 12.4417 0.859219 12.3354 0.815108C12.2291 0.770997 12.1151 0.748291 12 0.748291C11.8849 0.748291 11.7709 0.770997 11.6646 0.815108C11.5583 0.859219 11.4618 0.923869 11.3805 1.00536L0.880501 11.5054C0.799298 11.5868 0.734936 11.6834 0.691096 11.7897C0.647256 11.896 0.624796 12.0099 0.625001 12.1249V24.3749C0.625001 24.6069 0.717189 24.8295 0.881283 24.9936C1.04538 25.1577 1.26794 25.2499 1.5 25.2499H9.375C9.60707 25.2499 9.82963 25.1577 9.99372 24.9936C10.1578 24.8295 10.25 24.6069 10.25 24.3749V17.3749H13.75V24.3749C13.75 24.6069 13.8422 24.8295 14.0063 24.9936C14.1704 25.1577 14.3929 25.2499 14.625 25.2499H22.5C22.7321 25.2499 22.9546 25.1577 23.1187 24.9936C23.2828 24.8295 23.375 24.6069 23.375 24.3749V12.1249C23.3752 12.0099 23.3527 11.896 23.3089 11.7897C23.2651 11.6834 23.2007 11.5868 23.1195 11.5054L20.75 9.1376V3.37486C20.75 3.14279 20.6578 2.92023 20.4937 2.75614C20.3296 2.59204 20.1071 2.49986 19.875 2.49986H18.125C17.8929 2.49986 17.6704 2.59204 17.5063 2.75614C17.3422 2.92023 17.25 3.14279 17.25 3.37486V5.6376L12.6195 1.00536ZM2.375 23.4999V12.4871L12 2.86211L21.625 12.4871V23.4999H15.5V16.4999C15.5 16.2678 15.4078 16.0452 15.2437 15.8811C15.0796 15.717 14.8571 15.6249 14.625 15.6249H9.375C9.14294 15.6249 8.92038 15.717 8.75628 15.8811C8.59219 16.0452 8.5 16.2678 8.5 16.4999V23.4999H2.375Z"
                  fill="#A986A7"
                />
              </svg>

              <input
                type="text"
                name=""
                id=""
                value={apartmentType}
                placeholder="Apartment/Building Type"
                className="border-0 w-100 mx-2 somehow-black-text"
                onChange={(e) => {
                  setapartmentType(e.target.value);
                }}
              />
            </div>
            <div className="d-flex align-items-center purple-border p-2 mt-3">
              <svg
                width="22"
                height="22"
                viewBox="0 0 22 22"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  fillRule="evenodd"
                  clipRule="evenodd"
                  d="M4.4 8.8V5.13333C4.4 4.45921 4.53278 3.7917 4.79075 3.16889C5.04873 2.54609 5.42685 1.98019 5.90352 1.50352C6.38019 1.02684 6.94609 0.648726 7.56889 0.390752C8.1917 0.132778 8.85921 0 9.53333 0C10.2075 0 10.875 0.132778 11.4978 0.390752C12.1206 0.648726 12.6865 1.02684 13.1631 1.50352C13.6398 1.98019 14.0179 2.54609 14.2759 3.16889C14.5339 3.7917 14.6667 4.45921 14.6667 5.13333V8.8H16.8667C17.4501 8.8 18.0097 9.03179 18.4223 9.44436C18.8349 9.85695 19.0667 10.4165 19.0667 11V11.8067C19.8955 11.975 20.6407 12.4247 21.176 13.0795C21.7113 13.7344 22.0037 14.5542 22.0037 15.4C22.0037 16.2458 21.7113 17.0656 21.176 17.7205C20.6407 18.3753 19.8955 18.825 19.0667 18.9933V19.8C19.0667 20.3835 18.8349 20.9431 18.4223 21.3556C18.0097 21.7682 17.4501 22 16.8667 22H2.2C1.61652 22 1.05695 21.7682 0.644365 21.3556C0.231785 20.9431 0 20.3835 0 19.8L0 11C0 10.4165 0.231785 9.85695 0.644365 9.44436C1.05695 9.03179 1.61652 8.8 2.2 8.8H4.4ZM5.86667 5.13333C5.86667 4.16087 6.25297 3.22824 6.94061 2.54061C7.62824 1.85298 8.56087 1.46667 9.53333 1.46667C10.5058 1.46667 11.4384 1.85298 12.1261 2.54061C12.8137 3.22824 13.2 4.16087 13.2 5.13333V8.8H5.86667V5.13333ZM12.4667 13.2C11.8832 13.2 11.3236 13.4318 10.911 13.8444C10.4985 14.2569 10.2667 14.8165 10.2667 15.4C10.2667 15.9835 10.4985 16.5431 10.911 16.9556C11.3236 17.3682 11.8832 17.6 12.4667 17.6H18.3333C18.9168 17.6 19.4764 17.3682 19.889 16.9556C20.3015 16.5431 20.5333 15.9835 20.5333 15.4C20.5333 14.8165 20.3015 14.2569 19.889 13.8444C19.4764 13.4318 18.9168 13.2 18.3333 13.2H12.4667Z"
                  fill="#A986A7"
                />
              </svg>

              <input
                type={showPassword ? "text" : "password"}
                name=""
                id=""
                value={password}
                //   value={searchInput}
                placeholder={`enter your password`}
                className="border-0 w-100 mx-2 somehow-black-text"
                  onChange={(e) => {
                    setPassword(e.target.value);
                  }}
              />

              {showPassword ? (
                <svg
                  width="20"
                  height="12"
                  viewBox="0 0 20 12"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  onClick={() => setshowPassword(!showPassword)}
                >
                  <path
                    d="M3.108 9.498L5.668 6.938C5.59501 6.63061 5.5571 6.31593 5.555 6C5.555 3.621 7.545 1.691 10 1.691C10.286 1.691 10.564 1.723 10.835 1.773L12.038 0.571001C11.3644 0.459403 10.6828 0.40255 10 0.401001C3.44 0.400001 0 5.231 0 6C0 6.423 1.057 8.09 3.108 9.497V9.498ZM16.895 2.505L14.333 5.065C14.402 5.367 14.444 5.678 14.444 6C14.444 8.379 12.455 10.307 10 10.307C9.716 10.307 9.44 10.275 9.171 10.226L7.967 11.429C8.609 11.533 9.283 11.599 10 11.599C16.56 11.599 20 6.766 20 6C20 5.576 18.944 3.91 16.895 2.505Z"
                    fill="#A986A7"
                  />
                </svg>
              ) : (
                <svg
                  width="20"
                  height="20"
                  viewBox="0 0 20 20"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  onClick={() => setshowPassword(!showPassword)}
                >
                  <path
                    d="M18.5211 1.47797C18.3336 1.2905 18.0793 1.18518 17.8141 1.18518C17.5489 1.18518 17.2946 1.2905 17.1071 1.47797L1.48009 17.107C1.38458 17.1992 1.3084 17.3096 1.25599 17.4316C1.20358 17.5536 1.176 17.6848 1.17484 17.8176C1.17369 17.9503 1.19899 18.082 1.24927 18.2049C1.29955 18.3278 1.37381 18.4395 1.4677 18.5334C1.56159 18.6273 1.67324 18.7015 1.79614 18.7518C1.91904 18.8021 2.05071 18.8274 2.18349 18.8262C2.31627 18.8251 2.44749 18.7975 2.5695 18.7451C2.6915 18.6927 2.80185 18.6165 2.89409 18.521L18.5201 2.89197C18.7076 2.70444 18.8129 2.45013 18.8129 2.18497C18.8129 1.9198 18.7076 1.66549 18.5201 1.47797H18.5211Z"
                    fill="#A986A7"
                  />
                  <path
                    d="M3.108 13.498L5.668 10.938C5.59501 10.6306 5.5571 10.3159 5.555 10C5.555 7.621 7.545 5.691 10 5.691C10.286 5.691 10.564 5.723 10.835 5.773L12.038 4.571C11.3644 4.4594 10.6828 4.40255 10 4.401C3.44 4.4 0 9.231 0 10C0 10.423 1.057 12.09 3.108 13.497V13.498ZM16.895 6.505L14.333 9.065C14.402 9.367 14.444 9.678 14.444 10C14.444 12.379 12.455 14.307 10 14.307C9.716 14.307 9.44 14.275 9.171 14.226L7.967 15.429C8.609 15.533 9.283 15.599 10 15.599C16.56 15.599 20 10.766 20 10C20 9.576 18.944 7.91 16.895 6.505V6.505Z"
                    fill="#A986A7"
                  />
                </svg>
              )}
            </div>
          </div>

          <div className="my-5 mt-4 ">
            <button className="page-btn border-0 w-100 p-2" onClick={(e) => {handleSignup()}}>
              Submit
            </button>
          </div>

          <div className="d-flex justify-content-center">
            <svg
              width="59"
              height="22"
              viewBox="0 0 59 22"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10.128 18.288C8.816 18.288 7.592 18.072 6.456 17.64C5.336 17.208 4.36 16.6 3.528 15.816C2.712 15.032 2.072 14.112 1.608 13.056C1.16 12 0.936 10.848 0.936 9.6C0.936 8.352 1.16 7.2 1.608 6.144C2.072 5.088 2.72 4.168 3.552 3.384C4.384 2.6 5.36 1.992 6.48 1.56C7.6 1.128 8.816 0.912 10.128 0.912C11.456 0.912 12.672 1.128 13.776 1.56C14.896 1.992 15.864 2.6 16.68 3.384C17.512 4.152 18.16 5.064 18.624 6.12C19.088 7.176 19.32 8.336 19.32 9.6C19.32 10.848 19.088 12.008 18.624 13.08C18.16 14.136 17.512 15.056 16.68 15.84C15.864 16.608 14.896 17.208 13.776 17.64C12.672 18.072 11.456 18.288 10.128 18.288ZM15.624 21.864C14.968 21.864 14.344 21.792 13.752 21.648C13.176 21.504 12.6 21.272 12.024 20.952C11.464 20.632 10.872 20.2 10.248 19.656C9.64 19.112 8.976 18.44 8.256 17.64L12.336 16.608C12.768 17.2 13.168 17.672 13.536 18.024C13.904 18.376 14.256 18.624 14.592 18.768C14.944 18.912 15.312 18.984 15.696 18.984C16.72 18.984 17.632 18.568 18.432 17.736L20.16 19.8C19.024 21.176 17.512 21.864 15.624 21.864ZM10.128 14.976C10.88 14.976 11.568 14.848 12.192 14.592C12.832 14.336 13.392 13.968 13.872 13.488C14.352 13.008 14.72 12.44 14.976 11.784C15.248 11.112 15.384 10.384 15.384 9.6C15.384 8.8 15.248 8.072 14.976 7.416C14.72 6.76 14.352 6.192 13.872 5.712C13.392 5.232 12.832 4.864 12.192 4.608C11.568 4.352 10.88 4.224 10.128 4.224C9.376 4.224 8.68 4.352 8.04 4.608C7.4 4.864 6.84 5.232 6.36 5.712C5.896 6.192 5.528 6.76 5.256 7.416C5 8.072 4.872 8.8 4.872 9.6C4.872 10.384 5 11.112 5.256 11.784C5.528 12.44 5.896 13.008 6.36 13.488C6.84 13.968 7.4 14.336 8.04 14.592C8.68 14.848 9.376 14.976 10.128 14.976ZM21.978 18V0.191999H25.722V18H21.978ZM37.1168 18V15.48L36.8768 14.928V10.416C36.8768 9.616 36.6288 8.992 36.1328 8.544C35.6528 8.096 34.9088 7.872 33.9008 7.872C33.2128 7.872 32.5328 7.984 31.8608 8.208C31.2048 8.416 30.6448 8.704 30.1808 9.072L28.8368 6.456C29.5408 5.96 30.3888 5.576 31.3808 5.304C32.3728 5.032 33.3808 4.896 34.4048 4.896C36.3728 4.896 37.9008 5.36 38.9888 6.288C40.0768 7.216 40.6208 8.664 40.6208 10.632V18H37.1168ZM33.1808 18.192C32.1728 18.192 31.3088 18.024 30.5888 17.688C29.8688 17.336 29.3168 16.864 28.9328 16.272C28.5488 15.68 28.3568 15.016 28.3568 14.28C28.3568 13.512 28.5408 12.84 28.9088 12.264C29.2928 11.688 29.8928 11.24 30.7088 10.92C31.5248 10.584 32.5888 10.416 33.9008 10.416H37.3328V12.6H34.3088C33.4288 12.6 32.8208 12.744 32.4848 13.032C32.1648 13.32 32.0048 13.68 32.0048 14.112C32.0048 14.592 32.1888 14.976 32.5568 15.264C32.9408 15.536 33.4608 15.672 34.1168 15.672C34.7408 15.672 35.3008 15.528 35.7968 15.24C36.2928 14.936 36.6528 14.496 36.8768 13.92L37.4528 15.648C37.1808 16.48 36.6848 17.112 35.9648 17.544C35.2448 17.976 34.3168 18.192 33.1808 18.192ZM51.6413 18.192C50.5053 18.192 49.5293 17.952 48.7133 17.472C47.8973 16.992 47.2733 16.264 46.8413 15.288C46.4093 14.296 46.1933 13.048 46.1933 11.544C46.1933 10.024 46.4173 8.776 46.8653 7.8C47.3293 6.824 47.9693 6.096 48.7853 5.616C49.6013 5.136 50.5533 4.896 51.6413 4.896C52.8573 4.896 53.9453 5.168 54.9053 5.712C55.8813 6.256 56.6493 7.024 57.2093 8.016C57.7853 9.008 58.0733 10.184 58.0733 11.544C58.0733 12.888 57.7853 14.056 57.2093 15.048C56.6493 16.04 55.8813 16.816 54.9053 17.376C53.9453 17.92 52.8573 18.192 51.6413 18.192ZM44.0093 18V0.191999H47.7533V7.704L47.5133 11.52L47.5853 15.36V18H44.0093ZM50.9933 15.12C51.6173 15.12 52.1693 14.976 52.6493 14.688C53.1453 14.4 53.5373 13.992 53.8253 13.464C54.1293 12.92 54.2812 12.28 54.2812 11.544C54.2812 10.792 54.1293 10.152 53.8253 9.624C53.5373 9.096 53.1453 8.688 52.6493 8.4C52.1693 8.112 51.6173 7.968 50.9933 7.968C50.3693 7.968 49.8093 8.112 49.3133 8.4C48.8173 8.688 48.4253 9.096 48.1373 9.624C47.8493 10.152 47.7053 10.792 47.7053 11.544C47.7053 12.28 47.8493 12.92 48.1373 13.464C48.4253 13.992 48.8173 14.4 49.3133 14.688C49.8093 14.976 50.3693 15.12 50.9933 15.12Z"
                fill="#38D263"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  );
}

export default Signup;
